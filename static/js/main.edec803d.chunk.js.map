{"version":3,"sources":["components/TableHeader/index.jsx","components/TableRow/index.jsx","assets/search.svg","components/Search/index.jsx","components/Button/index.jsx","service/api.js","service/posts-storage.js","assets/empty.png","components/Table/index.jsx","App.jsx","index.js"],"names":["TableHeader","onClick","className","TableRow","userId","title","body","id","Search","onChange","src","search","alt","type","placeholder","Button","children","disabled","getPosts","fetch","then","res","json","posts","filteredList","CURRENT_COUNT","a","data","slice","alert","getCount","current","length","Math","ceil","Table","useState","setPosts","click","setClick","sortCheck","setSortCheck","useEffect","getPostsList","currentPost","count","start","end","getPostsRange","sortList","up","sort","b","sortById","e","value","filterList","target","toLowerCase","filter","post","i","String","indexOf","map","key","empty","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edec803d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.scss\";\n\nconst TableHeader = ({ onClick }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"column id\" onClick={onClick}>\n        ID\n      </div>\n      <div className=\"column\">USER ID</div>\n      <div className=\"column\">TITLE</div>\n      <div className=\"column\">CONTENT</div>\n    </div>\n  );\n};\n\nexport default TableHeader;\n","import React from \"react\";\nimport \"./index.scss\";\n\nconst TableRow = ({ userId, title, body, id }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"column\">{id}</div>\n      <div className=\"column\">{userId}</div>\n      <div className=\"column\">{title}</div>\n      <div className=\"column\">{body}</div>\n    </div>\n  );\n};\n\nexport default TableRow;\n","export default __webpack_public_path__ + \"static/media/search.2d0c0c09.svg\";","import React from \"react\";\nimport \"./index.scss\";\nimport search from \"../../assets/search.svg\";\n\nconst Search = ({ onChange }) => {\n  return (\n    <div className=\"searchField\">\n      <img src={search} alt=\"search\" />\n      <input type=\"text\" placeholder=\"Введите текст\" onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport \"./index.scss\";\n\nconst Button = ({ children, onClick, disabled = false }) => {\n  return (\n    <div className=\"button\">\n      <button\n        className=\"btn\"\n        type=\"button\"\n        onClick={onClick}\n        disabled={disabled}\n      >\n        {children}\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","export function getPosts() {\n  return fetch(\"https://jsonplaceholder.typicode.com/posts\").then((res) =>\n    res.json()\n  );\n}\n","import { getPosts } from \"./api\";\n\nlet posts = [];\nlet filteredList = [];\n\nexport const CURRENT_COUNT = 10;\n\nexport async function getPostsList() {\n  try {\n    let data = await getPosts();\n\n    posts = [...data].slice(0, 55);\n\n    return posts;\n  } catch (err) {\n    alert(\"Ошибка в загрузке данных\");\n    return [];\n  }\n}\n\nexport const getCurrentPosts = () => {\n  return posts.slice(0, CURRENT_COUNT);\n};\n\nexport const getCount = () => {\n  let current = filteredList.length ? filteredList : posts;\n  return Math.ceil(current.length / CURRENT_COUNT);\n};\n\nexport const getPostsRange = (count) => {\n  let start = count * CURRENT_COUNT;\n  let end = count * CURRENT_COUNT + CURRENT_COUNT;\n  let current = filteredList.length ? filteredList : posts;\n\n  return current.slice(start, end);\n};\n\nexport const filterPosts = (value) => {\n  value = value.toLowerCase();\n\n  filteredList = posts.filter((post, i) => {\n    return (\n      String(post.id).indexOf(value) + 1 ||\n      post.title.toLowerCase().indexOf(value) + 1 ||\n      post.body.toLowerCase().indexOf(value) + 1\n    );\n  });\n\n  return value.length ? filteredList : posts;\n};\n\nexport const sortById = (up = true) => {\n  let current = filteredList.length ? filteredList : posts;\n  return current.sort((a, b) => {\n    return up ? b.id - a.id : a.id - b.id;\n  });\n};\n","export default __webpack_public_path__ + \"static/media/empty.41ade0ad.png\";","import React, { useEffect, useState } from \"react\";\nimport \"./index.scss\";\nimport TableHeader from \"../TableHeader\";\nimport TableRow from \"../TableRow\";\nimport Search from \"../Search\";\nimport Button from \"../Button\";\nimport {\n  getCount,\n  getPostsList,\n  getPostsRange,\n  filterPosts,\n  CURRENT_COUNT,\n  sortById,\n} from \"../../service/posts-storage\";\nimport empty from \"../../assets/empty.png\";\n\nconst Table = () => {\n  const [posts, setPosts] = useState([]);\n  const [click, setClick] = useState(0);\n  const [sortCheck, setSortCheck] = useState(false);\n\n  useEffect(() => {\n    getPostsList().then((posts) => {\n      setPosts(posts.slice(0, CURRENT_COUNT));\n    });\n  }, []);\n\n  useEffect(() => {\n    let currentPost = getPostsRange(click);\n\n    setPosts(currentPost);\n  }, [click]);\n\n  useEffect(() => {\n    setClick(0);\n\n    let sortList = sortById(sortCheck);\n\n    setPosts(sortList.slice(0, CURRENT_COUNT));\n  }, [sortCheck]);\n\n  const showNextPostList = () => {\n    setClick(click + 1);\n  };\n\n  const showPrevPostList = () => {\n    setClick(click - 1);\n  };\n\n  const filterPostList = (e) => {\n    let filterList = filterPosts(e.target.value);\n\n    setPosts(filterList.slice(0, CURRENT_COUNT));\n  };\n\n  const sortPostById = () => {\n    posts.length && setSortCheck(!sortCheck);\n  };\n\n  return (\n    <div className=\"table\">\n      <div className=\"table-header\">\n        <Search onChange={filterPostList} />\n      </div>\n      <div className=\"table-main\">\n        <div className=\"table-main-rows\">\n          <TableHeader onClick={sortPostById} />\n          {posts.map((post) => (\n            <TableRow {...post} key={post.id} />\n          ))}\n        </div>\n      </div>\n      {posts.length ? (\n        <div className=\"table-footer\">\n          <Button onClick={showPrevPostList} disabled={click <= 0}>\n            Назад\n          </Button>\n          <Button\n            onClick={showNextPostList}\n            disabled={click === getCount() - 1}\n          >\n            Вперед\n          </Button>\n        </div>\n      ) : (\n        <div className=\"emptySearch\">\n          <p>Упс, не найдено ...</p>\n          <p>Попробуй сформулировать запрос по-другому</p>\n          <img src={empty} alt=\"Нет результав\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import Table from \"./components/Table\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}